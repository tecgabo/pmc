# Importa√ß√µes necess√°rias
import streamlit as st
from PIL import Image, ImageDraw, ImageFont
import io
import datetime
import textwrap

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Project Model Canvas - TecVit√≥ria",
    page_icon="üìã",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cores e estilos da TecVit√≥ria
PRIMARY_COLOR = "#003366"  # Azul marinho
SECONDARY_COLOR = "#FF6600"  # Laranja
ACCENT_COLOR = "#00CCCC"  # Azul claro
BACKGROUND_COLOR = "#F5F5F5"
TEXT_COLOR = "#333333"
FONT = "Arial"

# CSS personalizado
st.markdown(f"""
<style>
    /* Estilos gerais */
    .stApp {{
        background-color: {BACKGROUND_COLOR};
    }}
    .header {{
        background: linear-gradient(135deg, {PRIMARY_COLOR}, {ACCENT_COLOR});
        color: white;
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }}
    .header h1 {{
        color: white;
        font-weight: 700;
    }}
    .header p {{
        color: white;
        opacity: 0.9;
    }}
    .section {{
        background-color: white;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        border-left: 4px solid {SECONDARY_COLOR};
    }}
    .section h2 {{
        color: {PRIMARY_COLOR};
        font-size: 1.2rem;
        margin-top: 0;
    }}
    .sidebar .sidebar-content {{
        background-color: {PRIMARY_COLOR};
        color: white;
    }}
    .stButton button {{
        background-color: {SECONDARY_COLOR};
        color: white;
        border: none;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-weight: 600;
    }}
    .stButton button:hover {{
        background-color: #E55C00;
        color: white;
    }}
    .stDownloadButton button {{
        background-color: {PRIMARY_COLOR};
        color: white;
    }}
    .footer {{
        text-align: center;
        margin-top: 3rem;
        padding: 1rem;
        color: {TEXT_COLOR};
        font-size: 0.9rem;
    }}
</style>
""", unsafe_allow_html=True)

# Cabe√ßalho
st.markdown(f"""
<div class="header">
    <h1>Project Model Canvas</h1>
    <p>Estruture seu projeto de forma clara e objetiva com o modelo da TecVit√≥ria</p>
</div>
""", unsafe_allow_html=True)

# Fun√ß√£o para gerar o canvas com layout melhorado
def generate_canvas(data):
    """Gera a imagem do canvas com as informa√ß√µes fornecidas"""
    # Criar imagem base
    img = Image.new('RGB', (2480, 3508), color=(255, 255, 255))  # Tamanho A4 em 300dpi
    d = ImageDraw.Draw(img)
    
    try:
        font_title = ImageFont.truetype("arial.ttf", 36)
        font_section = ImageFont.truetype("arial.ttf", 24)
        font_text = ImageFont.truetype("arial.ttf", 18)
    except:
        font_title = ImageFont.load_default()
        font_section = ImageFont.load_default()
        font_text = ImageFont.load_default()
    
    # Cabe√ßalho
    d.rectangle([(100, 100), (2380, 200)], fill=PRIMARY_COLOR)
    d.text((150, 150), "PROJECT MODEL CANVAS - TECVIT√ìRIA", font=font_title, fill="white", anchor="mm")
    
    # Informa√ß√µes do projeto
    d.rectangle([(100, 220), (2380, 300)], fill=ACCENT_COLOR)
    d.text((150, 260), f"Projeto: {data.get('nome_projeto', '')}", font=font_section, fill="white")
    d.text((1000, 260), f"Respons√°vel: {data.get('responsavel', '')}", font=font_section, fill="white")
    d.text((1800, 260), f"Data: {data.get('data', '')}", font=font_section, fill="white")
    
    # Grid do canvas (9 se√ß√µes)
    sections = [
        {"name": "Justificativas", "pos": (100, 350, 780, 650)},
        {"name": "Pitch", "pos": (800, 350, 1480, 650)},
        {"name": "Produto/Servi√ßo", "pos": (1500, 350, 2380, 650)},
        {"name": "Stakeholders", "pos": (100, 700, 780, 1000)},
        {"name": "Premissas", "pos": (800, 700, 1480, 1000)},
        {"name": "Riscos", "pos": (1500, 700, 2380, 1000)},
        {"name": "Objetivos", "pos": (100, 1050, 780, 1350)},
        {"name": "Requisitos", "pos": (800, 1050, 1480, 1350)},
        {"name": "Equipe", "pos": (1500, 1050, 2380, 1350)},
        {"name": "Entregas", "pos": (100, 1400, 780, 1700)},
        {"name": "Cronograma", "pos": (800, 1400, 1480, 1700)},
        {"name": "Benef√≠cios", "pos": (1500, 1400, 2380, 1700)},
        {"name": "Restri√ß√µes", "pos": (100, 1750, 780, 2050)},
        {"name": "Custos", "pos": (800, 1750, 1480, 2050)},
        {"name": "Observa√ß√µes", "pos": (1500, 1750, 2380, 2050)}
    ]
    
    for section in sections:
        # Desenhar ret√¢ngulo da se√ß√£o
        d.rectangle(section["pos"], outline=PRIMARY_COLOR, width=2)
        
        # Adicionar t√≠tulo da se√ß√£o
        d.rectangle([(section["pos"][0], section["pos"][1]), 
                    (section["pos"][2], section["pos"][1]+50)], 
                    fill=SECONDARY_COLOR)
        d.text((section["pos"][0]+10, section["pos"][1]+25), 
              section["name"].upper(), font=font_section, fill="white")
        
        # Adicionar conte√∫do (com quebra de linha)
        content = data.get(section["name"].lower().replace("/", "").replace(" ", "_"), "")
        if content:
            wrapped_text = textwrap.wrap(content, width=60)
            y_text = section["pos"][1] + 80
            for line in wrapped_text:
                d.text((section["pos"][0]+20, y_text), line, font=font_text, fill=TEXT_COLOR)
                y_text += 30
    
    return img

# Dicas detalhadas para cada campo
field_hints = {
    'justificativas': "Por que este projeto existe? Quais problemas ele resolve? Quais oportunidades ele aproveita?",
    'pitch': "Resuma seu projeto em 1-2 frases impactantes. O que faz, para quem e qual o diferencial?",
    'produto_servico': "O que ser√° entregue? Descreva os principais componentes, funcionalidades e caracter√≠sticas.",
    'stakeholders': "Quem s√£o as partes interessadas? (clientes, patrocinadores, equipe, reguladores, etc.)",
    'premissas': "Quais suposi√ß√µes est√£o sendo feitas? O que precisa ser verdade para o projeto ter sucesso?",
    'riscos': "Quais s√£o os principais riscos? Probabilidade e impacto de cada um. Como mitigar?",
    'objetivos': "Quais resultados concretos o projeto deve alcan√ßar? Use crit√©rios SMART.",
    'requisitos': "Quais s√£o as necessidades obrigat√≥rias (MUST) e desej√°veis (SHOULD)?",
    'equipe': "Quem s√£o os principais respons√°veis? Pap√©is e responsabilidades.",
    'entregas': "Quais s√£o os principais marcos e entreg√°veis do projeto?",
    'cronograma': "Principais fases e prazos. Marcos importantes.",
    'beneficios': "Quais benef√≠cios o projeto trar√°? Para a organiza√ß√£o, clientes e stakeholders.",
    'restricoes': "Quais s√£o as limita√ß√µes? (or√ßamento, tempo, recursos, regulamenta√ß√µes)",
    'custos': "Principais categorias de custos e estimativas.",
    'observacoes': "Outras informa√ß√µes relevantes que n√£o se encaixam nas outras se√ß√µes."
}

# Templates pr√©-definidos
templates = {
    "Selecione um template": {k: "" for k in field_hints},
    "Projeto de Inova√ß√£o Tecnol√≥gica": {
        'justificativas': "‚Ä¢ Mercado em transforma√ß√£o digital\n‚Ä¢ Concorr√™ncia lan√ßou novo produto\n‚Ä¢ Demanda de clientes por solu√ß√£o integrada",
        'pitch': "Plataforma SaaS de gest√£o empresarial integrada para PMEs, com m√≥dulos financeiro, comercial e RH em uma √∫nica solu√ß√£o.",
        'produto_servico': "‚Ä¢ Plataforma modular em nuvem\n‚Ä¢ Integra√ß√£o com bancos e marketplaces\n‚Ä¢ Pain√©is de BI em tempo real\n‚Ä¢ App mobile para gestores",
        'stakeholders': "‚Ä¢ Diretoria Executiva (patrocinador)\n‚Ä¢ L√≠deres de departamento\n‚Ä¢ Equipe de TI\n‚Ä¢ Clientes pilotos",
        'premissas': "‚Ä¢ Equipe permanecer√° alocada\n‚Ä¢ Or√ßamento aprovado conforme planejado\n‚Ä¢ Parceiros tecnol√≥gicos entregar√£o APIs no prazo",
        'riscos': "1. Atraso na aprova√ß√£o [Prob: M√©dia] [Impacto: Alto] - Mitiga√ß√£o: Plano B com VC\n2. Mudan√ßa regulat√≥ria [Prob: Baixa] [Impacto: Cr√≠tico]",
        'objetivos': "‚Ä¢ Lan√ßar MVP at√© 30/09/2024\n‚Ä¢ 10 clientes pilotos at√© Nov/2024\n‚Ä¢ ROI positivo em 18 meses",
        'requisitos': "[MUST] Integra√ß√£o com bancos\n[MUST] Seguran√ßa de dados GDPR\n[SHOULD] Interface multi-idioma",
        'equipe': "‚Ä¢ GP: Ana Silva\n‚Ä¢ Tech Lead: Carlos Souza\n‚Ä¢ PO: Mariana Costa\n‚Ä¢ 5 devs fullstack",
        'entregas': "1. Especifica√ß√£o t√©cnica (M1)\n2. M√≥dulo financeiro (M3)\n3. MVP completo (M6)",
        'cronograma': "‚Ä¢ F1 (M1-2): Especifica√ß√£o\n‚Ä¢ F2 (M3-5): Desenvolvimento\n‚Ä¢ F3 (M6): Pilotagem\n‚Ä¢ F4 (M7-9): Ajustes e escala",
        'beneficios': "‚Ä¢ Redu√ß√£o de 30% em processos manuais\n‚Ä¢ Ganho de produtividade de 25%\n‚Ä¢ Tomada de decis√£o mais √°gil",
        'restricoes': "‚Ä¢ Or√ßamento: R$ 1.8M\n‚Ä¢ Prazo: 9 meses\n‚Ä¢ Equipe limitada a 8 pessoas",
        'custos': "‚Ä¢ Desenvolvimento: R$ 1.2M\n‚Ä¢ Infra: R$ 300k\n‚Ä¢ Marketing: R$ 200k\n‚Ä¢ Conting√™ncia: R$ 100k",
        'observacoes': "Parceria estrat√©gica com FinTechXYZ para m√≥dulo financeiro"
    },
    "Projeto de Transforma√ß√£o Digital": {
        'justificativas': "‚Ä¢ Processos obsoletos causando atrasos\n‚Ä¢ Necessidade de digitaliza√ß√£o para competitividade\n‚Ä¢ Expectativa de clientes por servi√ßos digitais",
        'pitch': "Moderniza√ß√£o dos processos e sistemas da empresa para oferecer experi√™ncia digital integrada aos clientes.",
        'produto_servico': "‚Ä¢ Portal do cliente\n‚Ä¢ App mobile\n‚Ä¢ BPM para automa√ß√£o de processos\n‚Ä¢ API Gateway para integra√ß√£o",
        'stakeholders': "‚Ä¢ CEO\n‚Ä¢ Diretoria de Opera√ß√µes\n‚Ä¢ Equipe de TI\n‚Ä¢ Consultoria especializada",
        'premissas': "‚Ä¢ Mudan√ßa cultural ser√° apoiada pela lideran√ßa\n‚Ä¢ Budget aprovado em 3 etapas\n‚Ä¢ Equipe ter√° treinamento adequado",
        'riscos': "1. Resist√™ncia √† mudan√ßa [Prob: Alta] [Impacto: M√©dio]\n2. Complexidade de integra√ß√£o [Prob: M√©dia] [Impacto: Alto]",
        'objetivos': "‚Ä¢ Reduzir tempo de atendimento em 40%\n‚Ä¢ Digitalizar 80% dos processos em 12 meses\n‚Ä¢ NPS acima de 70",
        'requisitos': "[MUST] Acessibilidade WCAG\n[MUST] Disponibilidade 99.9%\n[SHOULD] Chatbot integrado",
        'equipe': "‚Ä¢ GP: Jo√£o Mendes\n‚Ä¢ Arquiteta: Paula Lima\n‚Ä¢ 6 desenvolvedores\n‚Ä¢ 2 analistas de neg√≥cio",
        'entregas': "1. Diagn√≥stico AS-IS\n2. Blueprint TO-BE\n3. MVP Portal\n4. Rollout completo",
        'cronograma': "‚Ä¢ Fase 1: An√°lise (2 meses)\n‚Ä¢ Fase 2: Desenvolvimento (5 meses)\n‚Ä¢ Fase 3: Implanta√ß√£o (3 meses)",
        'beneficios': "‚Ä¢ Melhoria na experi√™ncia do cliente\n‚Ä¢ Redu√ß√£o de custos operacionais\n‚Ä¢ Agilidade na lan√ßamento de novos produtos",
        'restricoes': "‚Ä¢ N√£o pode parar opera√ß√£o atual\n‚Ä¢ Deve manter compatibilidade com sistemas legados\n‚Ä¢ Or√ßamento faseado",
        'custos': "‚Ä¢ Consultoria: R$ 500k\n‚Ä¢ Desenvolvimento: R$ 1.5M\n‚Ä¢ Infraestrutura: R$ 800k\n‚Ä¢ Treinamento: R$ 200k",
        'observacoes': "Alinhar com projeto de Cultura Digital que acontece em paralelo"
    }
}

# Sidebar com informa√ß√µes b√°sicas
with st.sidebar:
    st.image("https://tecvitoria.com.br/wp-content/uploads/2022/03/logo-tecvitoria-horizontal.png", width=200)
    st.markdown("### Informa√ß√µes B√°sicas")
    nome_projeto = st.text_input("Nome do Projeto*", placeholder="Nome oficial do projeto", help="O nome oficial do projeto como registrado na organiza√ß√£o")
    responsavel = st.text_input("Respons√°vel*", placeholder="Gerente do Projeto", help="Nome do gerente ou l√≠der do projeto")
    data = st.date_input("Data*", datetime.date.today())
    versao = st.text_input("Vers√£o", placeholder="1.0", help="Vers√£o deste canvas")
    
    st.markdown("---")
    st.markdown("### Templates")
    selected_template = st.selectbox("Carregar template:", list(templates.keys()))
    
    if selected_template != "Selecione um template":
        if st.button("Aplicar Template"):
            st.session_state.template_data = templates[selected_template]
            st.success("Template aplicado com sucesso! Revise e adapte os campos conforme necess√°rio.")
    
    st.markdown("---")
    st.markdown("### A√ß√µes")
    if st.button("Limpar Formul√°rio"):
        for key in field_hints:
            st.session_state[key] = ""
        st.session_state['nome_projeto'] = ""
        st.session_state['responsavel'] = ""
        st.experimental_rerun()

# Inicializar session_state
for key in field_hints:
    if key not in st.session_state:
        st.session_state[key] = templates["Selecione um template"][key]
if 'nome_projeto' not in st.session_state:
    st.session_state['nome_projeto'] = ""
if 'responsavel' not in st.session_state:
    st.session_state['responsavel'] = ""

# Formul√°rio principal
tab1, tab2 = st.tabs(["üìù Preencher Canvas", "üñºÔ∏è Visualizar Canvas"])

with tab1:
    st.markdown("### Preencha as se√ß√µes do Project Model Canvas")
    
    # Se√ß√£o 1
    with st.expander("üîç Justificativas", expanded=True):
        st.text_area("Por que este projeto existe?", key='justificativas', height=150, 
                   help=field_hints['justificativas'])
    
    # Se√ß√£o 2
    with st.expander("üé§ Pitch do Projeto"):
        st.text_area("Resumo executivo do projeto", key='pitch', height=120, 
                   help=field_hints['pitch'])
    
    # Se√ß√£o 3
    with st.expander("üì¶ Produto/Servi√ßo"):
        st.text_area("O que ser√° entregue?", key='produto_servico', height=150, 
                   help=field_hints['produto_servico'])
    
    # Se√ß√£o 4
    col1, col2 = st.columns(2)
    with col1:
        with st.expander("üë• Stakeholders"):
            st.text_area("Partes interessadas", key='stakeholders', height=200, 
                       help=field_hints['stakeholders'])
    
    with col2:
        with st.expander("üîÆ Premissas"):
            st.text_area("Suposi√ß√µes base", key='premissas', height=200, 
                       help=field_hints['premissas'])
    
    # Se√ß√£o 5
    with st.expander("‚ö†Ô∏è Riscos"):
        st.text_area("Riscos e planos de mitiga√ß√£o", key='riscos', height=200, 
                   help=field_hints['riscos'])
    
    # Se√ß√£o 6
    col3, col4 = st.columns(2)
    with col3:
        with st.expander("üéØ Objetivos"):
            st.text_area("Resultados esperados", key='objetivos', height=200, 
                       help=field_hints['objetivos'])
    
    with col4:
        with st.expander("üìã Requisitos"):
            st.text_area("Necessidades obrigat√≥rias e desej√°veis", key='requisitos', height=200, 
                       help=field_hints['requisitos'])
    
    # Se√ß√£o 7
    with st.expander("üë©‚Äçüíª Equipe"):
        st.text_area("Respons√°veis e pap√©is", key='equipe', height=150, 
                   help=field_hints['equipe'])
    
    # Se√ß√£o 8
    col5, col6 = st.columns(2)
    with col5:
        with st.expander("üì¶ Entregas"):
            st.text_area("Principais marcos e entreg√°veis", key='entregas', height=200, 
                       help=field_hints['entregas'])
    
    with col6:
        with st.expander("üìÖ Cronograma"):
            st.text_area("Fases e prazos", key='cronograma', height=200, 
                       help=field_hints['cronograma'])
    
    # Se√ß√£o 9
    with st.expander("üí∞ Custos"):
        st.text_area("Estimativas de custos", key='custos', height=150, 
                   help=field_hints['custos'])
    
    # Se√ß√£o 10
    col7, col8 = st.columns(2)
    with col7:
        with st.expander("‚ú® Benef√≠cios"):
            st.text_area("Benef√≠cios esperados", key='beneficios', height=200, 
                       help=field_hints['beneficios'])
    
    with col8:
        with st.expander("üöß Restri√ß√µes"):
            st.text_area("Limita√ß√µes do projeto", key='restricoes', height=200, 
                       help=field_hints['restricoes'])
    
    # Se√ß√£o 11
    with st.expander("üìù Observa√ß√µes"):
        st.text_area("Outras informa√ß√µes relevantes", key='observacoes', height=150, 
                   help=field_hints['observacoes'])

with tab2:
    st.markdown("### Pr√©-visualiza√ß√£o do Project Model Canvas")
    
    if st.session_state['nome_projeto'] or st.session_state['responsavel'] or any(st.session_state[key] for key in field_hints):
        # Preparar dados para o canvas
        canvas_data = {
            'nome_projeto': st.session_state['nome_projeto'],
            'responsavel': st.session_state['responsavel'],
            'data': data.strftime("%d/%m/%Y")
        }
        
        # Adicionar todos os campos do formul√°rio
        for key in field_hints:
            canvas_data[key] = st.session_state[key]
        
        # Gerar imagem do canvas
        canvas_img = generate_canvas(canvas_data)
        
        # Mostrar preview
        st.image(canvas_img, caption="Project Model Canvas - TecVit√≥ria", use_column_width=True)
        
        # Bot√£o para download
        img_bytes = io.BytesIO()
        canvas_img.save(img_bytes, format='PNG')
        img_bytes = img_bytes.getvalue()
        
        st.download_button(
            label="‚¨áÔ∏è Baixar Canvas (PNG)",
            data=img_bytes,
            file_name=f"project_model_canvas_{st.session_state['nome_projeto'].replace(' ', '_').lower()}.png",
            mime="image/png"
        )
        
        # Op√ß√£o para PDF (seria necess√°rio relat√≥rio em PDF)
        # st.download_button(
        #     label="‚¨áÔ∏è Baixar Relat√≥rio (PDF)",
        #     data=generate_pdf(canvas_data),  # Fun√ß√£o hipot√©tica
        #     file_name=f"project_model_canvas_{st.session_state['nome_projeto'].replace(' ', '_').lower()}.pdf",
        #     mime="application/pdf"
        # )
    else:
        st.warning("Preencha pelo menos alguns campos no formul√°rio para visualizar o canvas.")

# Rodap√©
st.markdown("---")
st.markdown("""
<div class="footer">
    <p>Project Model Canvas - TecVit√≥ria ¬© 2024 | Desenvolvido para estruturar projetos de forma clara e visual</p>
    <p style="font-size:0.8rem;">Vers√£o 2.0 | Atualizado em julho/2024</p>
</div>
""", unsafe_allow_html=True)
